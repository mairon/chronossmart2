<!-- Required scripts -->
<script type="text/javascript" src="/qz/js/qz-tray.js"></script>
<script type="text/javascript" src="/qz/js/dependencies/rsvp-3.1.0.min.js"></script>
<script src="https://cdn.rawgit.com/kjur/jsrsasign/c057d3447b194fa0a3fdcea110579454898e093d/jsrsasign-all-min.js"></script>
<script type="text/javascript" src="/qz/js/dependencies/sha-256.min.js"></script>

<!-- Pollyfills -->
<script type="text/javascript" src="/qz/js/sample/jquery-1.11.3.min.js"></script>
<script type="text/javascript" src="/qz/js/sample/bootstrap.min.js"></script>


<script type="text/javascript" src="/qz/js/sample/promise-polyfill-8.1.3.min.js"></script>
<script type="text/javascript" src="/qz/js/sample/whatwg-fetch-3.0.0.min.js"></script>
<script type="text/javascript" src="/qz/js/sample/padstart-pollyfill.js"></script>
<script type="text/javascript" src="/qz/js/sample/array-from-pollyfill.js"></script>
<script src="/qz/assets/signing/sign-message.js"></script>

<script>
  qz.websocket.connect();



  qz.security.setCertificatePromise(function(resolve, reject) {
     fetch("/qz/assets/signing/digital-certificate.txt", {cache: 'no-store', headers: {'Content-Type': 'text/plain'}})
        .then(function(data) { data.ok ? resolve(data.text()) : reject(data.text()); });
  });    
 

    /// Connection ///
    function launchQZ() {
        if (!qz.websocket.isActive()) {
            window.location.assign("qz:launch");
            //Retry 5 times, pausing 1 second between each attempt
            startConnection({ retries: 5, delay: 1 });
        }
    }

    function startConnection(config) {
        var host = $('#connectionHost').val().trim();
        var usingSecure = $("#connectionUsingSecure").prop('checked');

        // Connect to a print-server instance, if specified
        if (host != "" && host != 'localhost') {
            if (config) {
                config.host = host;
                config.usingSecure = usingSecure;
            } else {
                config = { host: host, usingSecure: usingSecure };
            }
        }

        if (!qz.websocket.isActive()) {
            updateState('Waiting', 'default');

            qz.websocket.connect(config).then(function() {
                updateState('Active', 'success');
                findVersion();
            }).catch(handleConnectionError);
        } else {
            displayMessage('An active connection with QZ already exists.', 'alert-warning');
        }
    }

    function endConnection() {
        if (qz.websocket.isActive()) {
            qz.websocket.disconnect().then(function() {
                updateState('Inactive', 'default');
            }).catch(handleConnectionError);
        } else {
            displayMessage('No active connection with QZ exists.', 'alert-warning');
        }
    }


    function listNetworkDevices() {
        var listItems = function(obj) {
            var html = '';
            var labels = { mac: 'MAC', ip: 'IP', up: 'Up', ip4: 'IPv4', ip6: 'IPv6', primary: 'Primary' };

            Object.keys(labels).forEach(function(key) {
                if (!obj.hasOwnProperty(key)) { return; }
                if (key !== 'ip' && obj[key] == obj['ip']) { return; }

                var value = obj[key];
                if (key === 'mac') { value = obj[key].match(/.{1,2}/g).join(':'); }
                if (typeof obj[key] === 'object') { value = value.join(', '); }

                html += '<li><strong>' + labels[key] + ':</strong> <code>' + value + '</code></li>';
            });

            return html;
        };

        qz.networking.devices().then(function(data) {
            var list = '';

            for(var i = 0; i < data.length; i++) {
                var info = data[i];

                if (i == 0) {
                    list += "<li>" +
                        "   <strong>Hostname:</strong> <code>" + info.hostname + "</code>" +
                        "</li>" +
                        "<li>" +
                        "   <strong>Username:</strong> <code>" + info.username + "</code>" +
                        "</li>";
                }
                list += "<li>" +
                    "   <strong>Interface:</strong> <code>" + (info.name || "UNKNOWN") + (info.id ? "</code> (<code>" + info.id + "</code>)" : "</code>") +
                    "   <ul>" + listItems(info) + "</ul>" +
                    "</li>";
            }

            pinMessage("<strong>Network details:</strong><ul>" + list + "</ul>");
        }).catch(displayError);
    }

</script>
<% #impressoes de ticket para cozinha multi destino de impressoras %>
<% if params[:proc] == 'ticket_cozinha_multi_print' %>

<% set_prints = VendasProduto.joins(:produto).select("produtos.set_print").where("produtos.set_print is not null and produtos.preparacao = true and vendas_produtos.venda_id = #{params[:venda_id]} and vendas_produtos.print = false").group("1") %>
<div class="row" align="center">
  <div class="col-md-12">
    <h1>Impressoras</h1>

    <% ind = 1 %>
    <% set_prints.each do |sp| %>
      <p><input type="text" name="" value="<%= sp.set_print %>" id="printere<%= ind %>"></p>
      <% a = "print#{ind}()" %>
      <script>  
        function <%= a %>{
          qz.printers.find($("#printere<%= ind %>").val()).then((found) => {
              var config = qz.configs.create(found);
              var data = [{
                  type: 'pixel',
                  format: 'html',
                  flavor: 'file',
                  data: "/vendas/<%= params[:venda_id] %>/ticket_cozinha?set_print=" + $("#printere<%= ind %>").val()
              }];
              return qz.print(config, data);
          }).catch((e) => {
              alert(e);
          })
        };
      </script>
      <% ind += 1 %>
    <% end %>
  </div>
</div>
<div class="row" align="center">
  <div class="col-md-12">
    <br>
    <button id="btn-print" class="btn btn-blue">Imprimir</button>   
  </div>
</div>


<script>  
  $('#btn-print').click(function() {
    <% ind = 1 %>
    <% set_prints.each do |sp| %>
        <% a = "print#{ind}();" %>
        <%= a %>
        <% ind += 1 %>
    <% end %>

    $.ajax({
      url: "/vendas/update_set_print",
      dataType: "json",
      data: {
        venda_id: <%= params[:venda_id] %>
      },
      success: function( data ) {
        $.each(data["produtos"], function(index, val) { 
          window.opener.$("#opener"+ val.id).show();
                    window.opener.$("#borrar"+ val.id).hide();
          console.log(val.id)
        });
      },
    });   
  }); 
</script>
<% #impressoes de ticker comprovante venda %>
<% elsif params[:proc] == 'ticket_comprovante' %>

<% set_prints = ConfigPrinter.where(processo: 'COMPROVANTE_VENDA', unidade_id: current_unidade.id) %>
<div class="row" align="center">
    <div class="col-md-12">
        <h1>Impressoras</h1>

        <% ind = 1 %>
        <% set_prints.each do |sp| %>
            <p><input type="text" name="" value="<%= sp.printer %>" id="printere<%= ind %>"></p>
            <% a = "print#{ind}()" %>
            <script>    
                function <%= a %>{
                  qz.printers.find($("#printere<%= ind %>").val()).then((found) => {
                      var config = qz.configs.create(found);
                      var data = [{
                          type: 'pixel',
                          format: 'html',
                          flavor: 'file',
                          data: "/vendas/<%= params[:venda_id] %>/comprovante01"
                      }];
                      return qz.print(config, data);
                  }).catch((e) => {
                      alert(e);
                  })
                };
            </script>
            <% ind += 1 %>
        <% end %>
    </div>
</div>
<div class="row" align="center">
    <div class="col-md-12">
        <br>
        <button id="btn-print" class="btn btn-blue">Imprimir</button>       
    </div>
</div>


<script>    
  $('#btn-print').click(function() {
      <% ind = 1 %>
      <% set_prints.each do |sp| %>
          <% a = "print#{ind}();" %>
          <%= a %>
          <% ind += 1 %>
      <% end %>    
  });   
</script>

<% end %>